{"version":3,"sources":["components/header.js","components/frontpage.js","components/movie.js","components/myreviews.js","components/createaccount.js","components/login.js","mobx/mobx.js","App.js","serviceWorker.js","index.js"],"names":["Header","observer","props","setLoadingScreen","loadingScreen","document","getElementById","gsap","to","right","logOut","store","user","username","token","click","changePage","x","location","window","pathname","toLowerCase","split","shift","join","setTimeout","nav","toJS","this","length","id","onClick","className","React","Component","Frontpage","calc","movies","l","target","link","state","scrollTo","thumbNails","map","key","alt","name","onLoad","src","picture","axios","require","Movie","setReviewBox","reviewBox","setState","reviewbox","reviewdone","onChange","changeRating","value","changeText","sendReview","post","params","movieid","rating","text","then","response","data","alert","getMovie","catch","error","e","get","reviews","averageScore","push","_id","finalScore","reduce","a","b","toFixed","averagescore","movie","search","theMovie","k","year","director","MyReviews","deleteReview","delete","res1","getReviews","err","movieName","myReviews","theReviews","myreviews","config","bcrypt","CreateAccount","send","password","message","genSalt","process","SALT","salt","hash","type","change","Login","Store","observable","App","exact","path","component","Boolean","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8f15daf8.chunk.js","sourcesContent":["\r\nimport React from 'react';\r\n\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport { observer } from \"mobx-react\";\r\n\r\nimport { toJS } from \"mobx\";\r\n\r\nimport gsap from 'gsap';\r\n\r\nimport \"./header.css\";\r\n\r\n\r\n\r\n\r\n\r\nconst Header = observer(\r\n\r\nclass Header extends React.Component {\r\n\r\n\r\n    constructor(props) {\r\n        super();\r\n\r\n\r\n        }\r\n\r\n\r\n\r\n        setLoadingScreen = () => {\r\n            \r\n            var loadingScreen = document.getElementById(\"loadingscreen\");\r\n            gsap.to(loadingScreen, 0.9, {right: \"0%\"});\r\n\r\n        }\r\n\r\n\r\n\r\n    logOut = () => {\r\n\r\n        this.props.store.user.username = \"\";\r\n        this.props.store.user.token = \"\"; \r\n\r\n\r\n        var frontLink = document.getElementById(\"navfront\");\r\n        frontLink.click();\r\n\r\n\r\n    }\r\n\r\n\r\n    changePage = (x) => {\r\n\r\n        var location = window.location.pathname;\r\n        location = location.toLowerCase();\r\n        location = location.split(\"\");\r\n        location.shift();\r\n        location = location.join(\"\");\r\n\r\n        if (location === x) {\r\n\r\n            \r\n            return null;\r\n\r\n        }\r\n\r\n        else if (window.location.pathname === \"/\" && x === \"frontpage\") {\r\n\r\n            \r\n            return null;\r\n\r\n        }\r\n\r\n\r\n        switch(x) {\r\n\r\n            case \"login\":\r\n            \r\n            this.setLoadingScreen();\r\n            setTimeout(() => {\r\n                document.getElementById(\"navlogin\").click(); \r\n            }, 1000);\r\n            \r\n            break;\r\n\r\n            case \"createaccount\":\r\n\r\n            this.setLoadingScreen();\r\n            setTimeout(() => {\r\n            document.getElementById(\"navcreate\").click();\r\n            }, 1000);\r\n            \r\n            break;\r\n\r\n            case \"myreviews\":\r\n\r\n            this.setLoadingScreen();\r\n            setTimeout(() => {\r\n                document.getElementById(\"navreview\").click();\r\n            }, 1000);\r\n            \r\n            break;\r\n\r\n            case \"frontpage\":\r\n           \r\n            this.setLoadingScreen();\r\n            setTimeout(() => {\r\n                document.getElementById(\"navfront\").click();\r\n            }, 1000);\r\n            \r\n            \r\n            break;\r\n\r\n            default:\r\n             \r\n          }\r\n\r\n\r\n    }\r\n\r\n\r\n\r\nrender () {\r\n\r\n    \r\n\r\n    var user = toJS(this.props.store.user);\r\n\r\n    var nav;\r\n\r\n    if (user.username.length === 0) {\r\n\r\n    nav =       <div id=\"loginnav\">\r\n                    <p onClick={() => this.changePage('login')}>Login</p>\r\n                    <p onClick={() => this.changePage('createaccount')}>Create Account</p>\r\n                    <Link id=\"navlogin\" className=\"navlink\" to=\"/login\"></Link>\r\n                    <Link id=\"navcreate\" className=\"navlink\" to=\"/createaccount\"></Link>\r\n                </div>\r\n\r\n    }\r\n\r\n\r\nelse {\r\n\r\n        nav = <div id=\"loginnav2\">\r\n                 <p onClick={() => this.changePage('myreviews')}>My Reviews</p>\r\n                 <p onClick={this.logOut}>Log out</p>\r\n                 <Link id=\"navreview\" className=\"navlink\" to=\"/myreviews\"></Link>\r\n            </div>\r\n   \r\n\r\n}\r\n\r\n\r\n\r\nreturn (\r\n\r\n    <div id=\"headerwrap\">\r\n        \r\n        <div id=\"headercont\">\r\n\r\n        <div id=\"rateamovielogo\">\r\n        <p onClick={() => this.changePage('frontpage')}>Rate a Movie</p>\r\n        <Link id=\"navfront\" className=\"navlink\" to=\"/\"></Link>\r\n        </div>\r\n\r\n        {nav}\r\n\r\n        <p id=\"forrender\">{this.props.store.user.username}</p>\r\n\r\n        </div>\r\n\r\n    </div>\r\n\r\n)\r\n\r\n\r\n}\r\n\r\n}\r\n\r\n)\r\n\r\nexport default Header;","\r\nimport React from 'react';\r\n\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport './frontpage.css';\r\n\r\nimport gsap from 'gsap';\r\n\r\nimport { observer } from \"mobx-react\";\r\n\r\n\r\n\r\n\r\nconst Frontpage = observer(\r\n\r\nclass Frontpage extends React.Component {\r\n\r\n    \r\n    constructor(props) {\r\n        super();\r\n\r\n        this.state = {\r\n\r\n            target: ''\r\n\r\n        }\r\n\r\n        this.calc = 0;\r\n        \r\n\r\n\r\n        }\r\n\r\n\r\n    loadingScreen = () => {\r\n\r\n        this.calc = this.calc + 1;\r\n\r\n        if (this.calc === this.props.store.movies.length) {\r\n\r\n            var loadingScreen = document.getElementById(\"loadingscreen\");\r\n\r\n            gsap.to(loadingScreen, 0.9, {right: \"-101%\"})\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    changePage = (x) => {\r\n     \r\n        var loadingScreen = document.getElementById(\"loadingscreen\");\r\n        \r\n        gsap.to(loadingScreen, 0.9, {right: \"0%\"})\r\n\r\n        var l = 'link-' + x.target.id\r\n\r\n        var link = document.getElementById(l);\r\n\r\n                \r\n        setTimeout(() => {\r\n               \r\n         link.click();\r\n\r\n        }, 1000);\r\n   \r\n\r\n    }\r\n\r\n\r\n    componentDidMount () {\r\n\r\n        window.scrollTo(0,0);\r\n\r\n    }\r\n\r\n\r\nrender () {\r\n\r\n\r\n\r\nvar movies = this.props.store.movies;\r\n\r\n\r\nvar thumbNails = movies.map((x) => {\r\n\r\n    return <div key={x.id} className=\"frontmovie\">\r\n            <img alt={x.name} id={x.id} onClick={this.changePage} onLoad={this.loadingScreen} src={x.picture}></img>\r\n            <p>{x.name}</p>\r\n            <Link id={'link-'+ x.id} to={'/movie?'+ x.id} className=\"movielink\"></Link>\r\n           </div>\r\n\r\n})\r\n\r\nreturn (\r\n\r\n    <div id=\"frontwrapper\">\r\n\r\n    \r\n\r\n        <div id=\"fronttable\">\r\n\r\n            <div id=\"frontmovieswrap\">\r\n\r\n            {thumbNails}\r\n\r\n            </div>\r\n\r\n        </div>\r\n\r\n    \r\n    </div>\r\n\r\n)\r\n\r\n\r\n}\r\n\r\n}\r\n\r\n);\r\n\r\nexport default Frontpage;","\r\nimport React from 'react';\r\n\r\nimport { observer } from \"mobx-react\";\r\n\r\nimport gsap from 'gsap';\r\n\r\nimport './movie.css';\r\n\r\nconst axios = require('axios');\r\n\r\n\r\n\r\nconst Movie = observer(\r\n\r\nclass Movie extends React.Component {\r\n\r\n\r\n    constructor(props) {\r\n        super();\r\n\r\n        this.state = {\r\n\r\n            reviews: \"\",\r\n\r\n            reviewbox: \"\",\r\n\r\n            averagescore: \"\"\r\n\r\n        }\r\n\r\n        this.username = \"\";\r\n        this.id = \"\";\r\n        this.rating = \"1\";\r\n        this.text = \"\";\r\n\r\n        this.reviewdone = \"no\";\r\n\r\n        }\r\n\r\n\r\n        setLoadingScreen = () => {\r\n            \r\n            var loadingScreen = document.getElementById(\"loadingscreen\");\r\n            gsap.to(loadingScreen, 0.9, {right: \"-101%\"});\r\n\r\n        }\r\n\r\n\r\n        setReviewBox = () => {\r\n        \r\n        var reviewBox;\r\n\r\n        if (this.username.length === 0) {\r\n\r\n            reviewBox = <div id=\"reviewbox\">\r\n\r\n            <p className=\"addmargin\">Log in to write a review.</p>\r\n\r\n            </div>\r\n\r\n            this.setState({\r\n                reviewbox: reviewBox\r\n            })\r\n\r\n        }\r\n\r\n        else if (this.username.length !== 0 && this.reviewdone === \"no\") {\r\n\r\n            reviewBox = <div id=\"reviewbox\">\r\n\r\n\r\n                <p className=\"addmargin\">Username: {this.props.store.user.username}</p>\r\n\r\n                <div id=\"ratingbox\">\r\n                <p>Rating:</p>\r\n                <select onChange={this.changeRating}>\r\n                    <option value=\"1\">1</option>\r\n                    <option value=\"2\">2</option>\r\n                    <option value=\"3\">3</option>\r\n                    <option value=\"4\">4</option>\r\n                    <option value=\"5\">5</option>\r\n                    <option value=\"6\">6</option>\r\n                    <option value=\"7\">7</option>\r\n                    <option value=\"8\">8</option>\r\n                    <option value=\"9\">9</option>\r\n                    <option value=\"10\">10</option>\r\n                </select>\r\n                </div>\r\n\r\n                <textarea onChange={this.changeText} id=\"reviewtext\"></textarea>\r\n\r\n                <div onClick={this.sendReview} className=\"thebutton\">\r\n                    <p>Send</p>\r\n                </div>\r\n\r\n                </div>\r\n\r\n                this.setState({\r\n                    reviewbox: reviewBox\r\n                })\r\n\r\n        }\r\n\r\n        else if (this.reviewdone === \"yes\") {\r\n\r\n            reviewBox = <div id=\"reviewbox\">\r\n\r\n            <p className=\"addmargin\">Already reviewed!</p>\r\n\r\n            </div>\r\n\r\n            this.setState({\r\n                reviewbox: reviewBox\r\n            })\r\n\r\n\r\n        }\r\n\r\n                        }\r\n\r\n\r\n        sendReview = () => {\r\n\r\n\r\n            axios.post('/review', {\r\n                params: {\r\n                username: this.props.store.user.username,\r\n                movieid: this.id,\r\n                rating: this.rating,\r\n                text: this.text,\r\n                token: this.props.store.user.token,\r\n\r\n                }\r\n            })\r\n            .then((response) => {\r\n            \r\n                if (response.data === \"no\") {\r\n\r\n                    window.alert(\"Error! Please login again.\")\r\n\r\n                }\r\n\r\n                else if (response.data === \"success\") {\r\n                    \r\n                    this.getMovie();\r\n                    this.setReviewBox();\r\n\r\n                }\r\n\r\n            })\r\n            .catch(function (error) {\r\n            \r\n            })\r\n\r\n\r\n        }\r\n\r\n\r\n        changeRating = (e) => {\r\n\r\n            this.rating = e.target.value; \r\n\r\n        }\r\n\r\n\r\n        changeText = (e) => {\r\n\r\n            this.text = e.target.value; \r\n\r\n        }\r\n\r\n\r\n\r\n        getMovie = () => {\r\n\r\n\r\n        var noReviews = () => {\r\n                \r\n                this.setState({\r\n                    reviews: <div id=\"noreviews\">\r\n                                <p>No reviews yet!</p>\r\n                            </div>\r\n                })\r\n\r\n            }\r\n\r\n\r\n            axios.get('/getmovie', {\r\n                params: {\r\n                id: this.id\r\n                }\r\n            })\r\n            .then((response)  => {\r\n            \r\n                if (response.data.length === 0) {\r\n                \r\n                    noReviews();\r\n\r\n                }\r\n\r\n                else if (response.data.length !== 0) {\r\n\r\n\r\n                    var reviews = response.data;\r\n\r\n                    var averageScore = [];\r\n\r\n                    reviews = reviews.map((x) => {\r\n\r\n\r\n                        averageScore.push(x.rating);\r\n\r\n                        // Check if allready reviewed by user\r\n                        if (x.username === this.username) {this.reviewdone = \"yes\"}\r\n\r\n                        return <div key={x._id} className=\"moviereview\">\r\n\r\n                               <p>Username: {x.username}</p>\r\n                               <p>Rating: {x.rating}</p>\r\n                               <p>{x.text}</p>\r\n\r\n                               </div>\r\n\r\n                            })\r\n\r\n                    var sum = averageScore.reduce((a, b) => {\r\n\r\n                        return a + b;\r\n\r\n                    })\r\n\r\n                    var finalScore = sum / averageScore.length;\r\n\r\n                    finalScore = finalScore.toFixed(2);\r\n\r\n                    \r\n\r\n                    this.setState({\r\n                        reviews: reviews,\r\n                        averagescore: finalScore\r\n                    })\r\n\r\n\r\n                }\r\n\r\n                // set reviewbox          \r\n                this.setReviewBox()\r\n\r\n            })\r\n            .catch(function (error) {\r\n            \r\n            })\r\n\r\n\r\n        }\r\n        \r\n\r\n\r\n\r\ncomponentDidMount () {\r\n\r\n    this.getMovie();\r\n    \r\n    window.scrollTo(0,0);\r\n\r\n}\r\n\r\n\r\nrender () {\r\n\r\nthis.username = this.props.store.user.username;\r\n\r\n// get the movie\r\n\r\nvar movie = window.location.search.split(\"\");\r\nmovie.shift();\r\nmovie =  movie.join('');\r\n\r\nvar movies = this.props.store.movies;\r\n\r\nvar theMovie;\r\n\r\nfor (var k = 0; k < movies.length; k++) {\r\n\r\n    if (movies[k].id === movie) {\r\n        theMovie = movies[k]\r\n    }\r\n\r\n}\r\n\r\nthis.id = theMovie.id;\r\n\r\n// movie info\r\n\r\ntheMovie = <div id=\"themovie\">\r\n\r\n                <div id=\"themoviepic\">\r\n                <img alt=\"The movie\" onLoad={this.setLoadingScreen} src={theMovie.picture}></img>\r\n                </div>\r\n\r\n                <div id=\"themovieinfo\">\r\n                    <div id=\"movieinfotext\">\r\n                    <p>{theMovie.name}</p>\r\n                    <p>{theMovie.year}</p>\r\n                    <p>Director: {theMovie.director}</p>\r\n                    <p>{theMovie.text}</p>\r\n                    <p>Average score: {this.state.averagescore}</p>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n           </div>\r\n\r\n\r\n\r\nreturn (\r\n\r\n    <div id=\"themoviewrap\">\r\n\r\n        <div id=\"themovietable\">\r\n\r\n        {theMovie}\r\n\r\n        <div id=\"movieline\"></div>\r\n\r\n        {this.state.reviewbox}\r\n\r\n        <div id=\"reviewsall\">\r\n\r\n        {this.state.reviews}\r\n        \r\n        </div>\r\n\r\n        </div>\r\n\r\n        \r\n    </div>\r\n\r\n)\r\n\r\n\r\n}\r\n\r\n}\r\n\r\n)\r\n\r\nexport default Movie;","\r\nimport React from 'react';\r\n\r\n\r\nimport { observer } from \"mobx-react\";\r\n\r\nimport gsap from 'gsap';\r\n\r\nimport './myreviews.css';\r\n\r\nconst axios = require('axios');\r\n\r\n\r\n\r\n\r\n\r\nconst MyReviews = observer(\r\n\r\nclass MyReviews extends React.Component {\r\n\r\n\r\n    constructor(props) {\r\n        super();\r\n\r\n        this.state = {\r\n\r\n            myreviews: \"\"\r\n\r\n        }\r\n\r\n\r\n        }\r\n\r\n\r\n\r\ndeleteReview = (id) => {\r\n\r\n    \r\n    axios.delete('/deletereview', {\r\n        params: {\r\n        id: id,\r\n        token: this.props.store.user.token\r\n        }\r\n    })\r\n    .then(res1 => {\r\n\r\n        if (res1.data === \"success\") {\r\n\r\n            this.getReviews();\r\n\r\n        }\r\n\r\n        else if (res1.data ===\"no\") {\r\n\r\n            window.alert(\"Error! Please login again!\")\r\n\r\n        }\r\n\r\n    })\r\n    .catch(err => {\r\n\r\n        window.alert(\"Error! Please login again!\")\r\n\r\n    })\r\n\r\n\r\n}\r\n\r\n\r\ngetReviews = () => {\r\n\r\n    axios.get('/getmyreviews', {\r\n        params: {\r\n        username: this.props.store.user.username,\r\n        token: this.props.store.user.token\r\n        }\r\n    })\r\n    .then(res1 => {\r\n\r\n        if (res1.data ===\"no\") {\r\n\r\n            window.alert(\"Error! Please login again!\")\r\n            return null\r\n\r\n        }\r\n\r\n        var myReviews = res1.data;\r\n        var movies = this.props.store.movies\r\n\r\n        var movieName;\r\n\r\n        var theReviews = myReviews.map((x) => {\r\n\r\n            // unnecessary work :D\r\n\r\n            for (var k = 0; k < movies.length; k++) {\r\n\r\n                if (movies[k].id === x.movieid) {\r\n                    movieName = movies[k].name;\r\n                }\r\n            }\r\n\r\n\r\n            return <div key={x._id} className=\"myreview\">\r\n                    <p>Movie: {movieName}</p>\r\n                    <p>rating: {x.rating}</p>\r\n                    <p>{x.text}</p>\r\n                    \r\n                    <div onClick={() => this.deleteReview(x._id)} className=\"thebutton3\">\r\n                    <p>Delete</p>\r\n                    </div>\r\n\r\n                    </div>\r\n\r\n\r\n            })\r\n\r\n            this.setState({\r\n\r\n                myreviews: theReviews\r\n\r\n            })\r\n\r\n    })\r\n    .catch(err => {\r\n\r\n\r\n    })\r\n\r\n}\r\n\r\n\r\ncomponentDidMount (){\r\n\r\n    this.getReviews();\r\n\r\n    var loadingScreen = document.getElementById(\"loadingscreen\");\r\n            \r\n    gsap.to(loadingScreen, 0.9, {right: \"-101%\"})\r\n\r\n    window.scrollTo(0,0);\r\n\r\n}\r\n\r\nrender () {\r\n\r\nreturn (\r\n\r\n    <div id=\"myreviewswrap\">\r\n        \r\n        <div id=\"myreviewscont\">\r\n\r\n            <div id=\"myreviews\">\r\n                <h1>{this.props.store.user.username}</h1>\r\n                {this.state.myreviews}\r\n\r\n            </div>\r\n\r\n        </div>\r\n\r\n    </div>\r\n\r\n)\r\n\r\n}\r\n\r\n}\r\n\r\n)\r\n\r\nexport default MyReviews;","\r\nimport React from 'react';\r\n\r\n\r\nimport { observer } from \"mobx-react\";\r\n\r\nimport gsap from 'gsap';\r\n\r\nimport \"./createaccount.css\";\r\n\r\nconst axios = require('axios');;\r\n\r\nrequire('dotenv').config();\r\n\r\nvar bcrypt = require('bcryptjs');\r\n\r\n\r\n\r\nconst CreateAccount = observer(\r\n\r\n    class CreateAccount extends React.Component {\r\n    \r\n    \r\n        constructor(props) {\r\n            super();\r\n    \r\n            this.state = {\r\n\r\n                message: <p>&nbsp;</p>\r\n\r\n            }\r\n\r\n\r\n            this.username = \"\";\r\n            this.password = \"\";\r\n    \r\n    \r\n            }\r\n\r\n\r\n\r\n        send = () => {\r\n\r\n\r\n            if (this.username.length === 0 || this.password.length === 0) {\r\n\r\n                this.setState({\r\n\r\n                    message: <p>Pick a username and a password!</p>\r\n\r\n                })\r\n\r\n            }\r\n\r\n            else {\r\n\r\n                var password = this.password;\r\n                var username = this.username;\r\n\r\n                bcrypt.genSalt(process.env.SALT, (err, salt) => {\r\n                    bcrypt.hash(password, salt, (err, hash) => {\r\n                        \r\n                        \r\n                        axios.post('/create', {\r\n                            params: {\r\n                              username: username,\r\n                              password: hash\r\n                            }\r\n                          })\r\n                          .then( (response) => {\r\n                            \r\n                            if (response.data === \"found\") {\r\n                                \r\n                                this.setState({\r\n                                    message: <p>Username reserved!</p>\r\n                                })\r\n\r\n                            }\r\n\r\n                            else if (response.data.type === \"success\")  {\r\n\r\n                                var username = response.data.username;\r\n                                var token = response.data.token;\r\n\r\n                                this.props.store.user.username = username;\r\n                                this.props.store.user.token = token;\r\n\r\n                                var loadingScreen = document.getElementById(\"loadingscreen\")\r\n                                gsap.to(loadingScreen, 1, {right: \"0%\"})\r\n        \r\n                                setTimeout(() => {\r\n                                    var frontLink = document.getElementById(\"navfront\");\r\n                                    frontLink.click();\r\n                                }, 1000);\r\n\r\n                            }\r\n\r\n                          })\r\n                          .catch(function (error) {\r\n                            \r\n                          })\r\n\r\n    \r\n                    });\r\n                });\r\n\r\n\r\n \r\n\r\n            }\r\n\r\n\r\n\r\n        }    \r\n\r\n\r\n\r\n        change = (e) => {\r\n\r\n\r\n            if (e.target.id === \"username\") {\r\n\r\n                this.username = e.target.value;\r\n\r\n            }\r\n\r\n           else if (e.target.id === \"password\") {\r\n\r\n                this.password = e.target.value;\r\n\r\n            }\r\n\r\n\r\n        }\r\n\r\n\r\n       componentDidMount () {\r\n\r\n                var loadingScreen = document.getElementById(\"loadingscreen\");\r\n            \r\n                gsap.to(loadingScreen, 1, {right: \"-101%\"})\r\n            \r\n       }\r\n\r\n\r\n\r\n        render () {\r\n\r\n            return (\r\n\r\n\r\n                <div id=\"createwrap\">\r\n\r\n                    <div id=\"createcont\">\r\n\r\n\r\n                        <h1>Create Account</h1>\r\n\r\n                        <input id=\"username\" onChange={this.change} type=\"text\"></input>\r\n                        <p>Username</p>\r\n\r\n                        <input id=\"password\" onChange={this.change} type=\"text\"></input>\r\n                        <p>Password</p>\r\n\r\n                        <div onClick={this.send} className=\"thebutton2\">\r\n                        <p>Send</p>\r\n                        </div>\r\n\r\n                        {this.state.message}\r\n\r\n\r\n                    </div>\r\n\r\n\r\n                </div>\r\n\r\n            )\r\n\r\n\r\n        }\r\n\r\n\r\n\r\n        }\r\n\r\n)\r\n\r\n\r\nexport default CreateAccount;","\r\nimport React from 'react';\r\n\r\n\r\n\r\nimport { observer } from \"mobx-react\";\r\n\r\n\r\nimport gsap from 'gsap';\r\n\r\nimport \"./login.css\";\r\n\r\nconst axios = require('axios');;\r\n\r\n\r\n\r\n\r\n\r\nconst Login = observer(\r\n\r\n    class Login extends React.Component {\r\n    \r\n    \r\n        constructor(props) {\r\n            super();\r\n    \r\n            this.state = {\r\n\r\n                message: <p>&nbsp;</p>\r\n\r\n            }\r\n\r\n\r\n            this.username = \"\";\r\n            this.password = \"\";\r\n    \r\n    \r\n            }\r\n\r\n\r\n\r\n        send = () => {\r\n\r\n\r\n            if (this.username.length === 0 || this.password.length === 0) {\r\n\r\n                this.setState({\r\n\r\n                    message: <p>Type your username and your password!</p>\r\n\r\n                })\r\n\r\n            }\r\n\r\n            else {\r\n\r\n                var username = this.username;\r\n                var password = this.password;\r\n                \r\n                axios.post('/loginuser', {\r\n                    params: {\r\n                      username: username,\r\n                      password: password\r\n                    }\r\n                  })\r\n                  .then( (response) => {\r\n                    \r\n                    if (response.data === \"no\") {\r\n\r\n                        this.setState({\r\n                            message: <p>Wrong username or password!</p>\r\n                        })\r\n\r\n                    }\r\n\r\n                    else if (response.data.type === \"success\") {\r\n\r\n                        this.props.store.user.username = username;\r\n                        this.props.store.user.token = response.data.token;\r\n\r\n                        var loadingScreen = document.getElementById(\"loadingscreen\")\r\n                        gsap.to(loadingScreen, 1, {right: \"0%\"})\r\n\r\n                        setTimeout(() => {\r\n                            var frontLink = document.getElementById(\"navfront\");\r\n                            frontLink.click();\r\n                        }, 1000);\r\n\r\n\r\n\r\n                    }\r\n\r\n                  })\r\n                  .catch(function (error) {\r\n                    \r\n                  })\r\n\r\n            }\r\n\r\n\r\n\r\n        }    \r\n\r\n\r\n\r\n        change = (e) => {\r\n\r\n\r\n            if (e.target.id === \"username\") {\r\n\r\n                this.username = e.target.value;\r\n\r\n            }\r\n\r\n           else if (e.target.id === \"password\") {\r\n\r\n                this.password = e.target.value;\r\n\r\n            }\r\n\r\n\r\n        }\r\n\r\n\r\n       componentDidMount () {\r\n\r\n                var loadingScreen = document.getElementById(\"loadingscreen\");\r\n            \r\n                gsap.to(loadingScreen, 1, {right: \"-101%\"})\r\n            \r\n       }\r\n\r\n\r\n\r\n        render () {\r\n\r\n            return (\r\n\r\n\r\n                <div id=\"createwrap\">\r\n\r\n                    <div id=\"createcont\">\r\n\r\n\r\n                        <h1>Login</h1>\r\n\r\n                        <input id=\"username\" onChange={this.change} type=\"text\"></input>\r\n                        <p>Username</p>\r\n\r\n                        <input id=\"password\" onChange={this.change} type=\"text\"></input>\r\n                        <p>Password</p>\r\n\r\n                        <div onClick={this.send} className=\"thebutton2\">\r\n                        <p>Send</p>\r\n                        </div>\r\n\r\n                        {this.state.message}\r\n\r\n\r\n                    </div>\r\n\r\n\r\n                </div>\r\n\r\n            )\r\n\r\n\r\n        }\r\n\r\n\r\n\r\n        }\r\n\r\n)\r\n\r\n\r\nexport default Login;","\r\nimport {observable} from 'mobx';\r\n\r\nimport films from '../movies/movies.json';\r\n\r\nvar movies = films.movies;\r\n\r\n\r\n\r\nclass store {\r\n\r\nmovies = movies;\r\n \r\nuser = observable({\r\n    username: \"\",\r\n    token: \"\"\r\n})\r\n\r\n\r\n}\r\n\r\n\r\nconst Store = new store();\r\n\r\nexport default Store;\r\n\r\n\r\n","import './App.css';\n\nimport React from 'react';\n\nimport { BrowserRouter, Route } from 'react-router-dom';\n\n\nimport Header from './components/header';\nimport FrontPage from './components/frontpage';\nimport Movie from './components/movie';\nimport MyReviews from './components/myreviews';\nimport CreateAccount from './components/createaccount';\nimport Login from './components/login';\n\n\nimport Store from './mobx/mobx.js';\n\n\n\nfunction App() {\n\n  \n\n  return (\n    <BrowserRouter>\n\n    <div id=\"App\" className=\"App\">\n\n    <div id=\"loadingscreen\"></div>\n\n    <div id=\"background\">\n    <h1>RATE A MOVIE</h1>\n    <h2>RATE A MOVIE</h2>\n    </div>\n\n      <Header store={Store} />\n\n      <div id=\"emptyspace\"></div>\n\n      <Route exact path='/' component={() => <FrontPage store={Store} />}/>\n      <Route path='/movie' component={() => <Movie store={Store} />}/>\n      <Route path='/myreviews' component={() => <MyReviews store={Store} />}/>\n      <Route path='/createaccount' component={() => <CreateAccount store={Store} />}/>\n      <Route path='/login' component={() => <Login store={Store} />}/>\n\n    </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}